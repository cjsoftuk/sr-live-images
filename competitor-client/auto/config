#! /bin/bash

# Create a basic config
lb config noauto -d squeeze -a i386 -p "gnome" -m http://ftp.uk.debian.org/debian/ --net-root-path /srv/tftp/competitor-client --net-root-server 172.19.0.1 --bootappend-live "live-config.noroot" -b net

# Disable ntfs-3g
mkdir -p config/apt/
cat <<EOF >config/apt/preferences
Package: ntfs-3g
Pin: version *
Pin-Priority: -1
EOF

# Copy the SSL cert into the build
mkdir -p config/includes.chroot/etc/ssl/certs/
cp /etc/ssl/sr/*.pem config/includes.chroot/etc/ssl/certs/
cp -r nssdb.tar.gz config/includes.chroot/lib/live/config
mkdir -p config/includes.chroot/lib/live/config/
cat <<EOF > config/includes.chroot/lib/live/config/999-nss-self-signed-bodge
#! /bin/bash

# Do a bodge for NSS
mkdir -p /home/user/.pki
tar -zxvf /lib/live/config/nssdb.tar.gz -C /home/user/.pki/
echo QUIT | openssl s_client -connect auth.net.studentrobotics.org:443 | sed -ne '/BEGIN CERT/,/END CERT/p' > /tmp/auth_cert
export NSS_DEFAULT_DB_TYPE="sql"
certutil -d /home/user/.pki/nssdb -A -t "C,," -n "SR_AUTH_CERT" -i /tmp/auth_cert
chown -R user /home/user/.pki/nssdb
rm /tmp/auth_cert
EOF
chmod +x config/includes.chroot/lib/live/config/999-nss-self-signed-bodge

# Preconfigure Chromium
mkdir -p config/includes.chroot/lib/live/config/
cat <<EOF > config/includes.chroot/lib/live/config/999-pre-seed-browsers
#! /bin/bash

# Create a chromium profile
mkdir -p /home/user/.config/chromium/Default

cat <<EOD >/home/user/.config/chromium/Default/Preferences
{
  "distribution": {
     "auto_launch_chrome": false,
     "import_bookmarks": false,
     "import_history": false,
     "import_home_page": false,
     "import_search_engine": false,
     "show_welcome_page": false,
     "skip_first_run_ui": true,
     "do_not_launch_chrome": false,
     "make_chrome_default": false,
     "make_chrome_default_for_user": false,
     "require_eula": false,
     "system_level": false,
     "verbose_logging": true
  },
  "browser": {
     "show_home_button": true
  },
  "bookmark_bar": {
     "show_on_all_tabs": false
  },
  "first_run_tabs": [
     "https://studentrobotics.org/"
  ],
  "homepage": "https://studentrobotics.org/",
  "homepage_is_newtabpage": false
}
EOD
touch /home/user/.config/chromium/First\\ Run
EOF
chmod +x config/includes.chroot/lib/live/config/999-pre-seed-browsers

# Add the udev rule to hide disks
mkdir -p config/includes.chroot/etc/udev/rules.d/
cat <<EOF > config/includes.chroot/etc/udev/rules.d/999-hide-local-disks.rules
SUBSYSTEMS=="usb", GOTO="sr_is_usb_mass_storage_device"

ACTION=="add|change", SUBSYSTEM=="block", ENV{UDISKS_AUTOMOUNT_HINT}="never", ENV{UDISKS_PRESENTATION_HIDE}="1"

LABEL="sr_is_usb_mass_storage_device"
EOF

# Add the set-root-password boot task
mkdir -p config/includes.chroot/lib/live/config/
cat <<EOF > config/includes.chroot/lib/live/config/999-set-root-password
#! /bin/bash

# Set root's password on the target system
sed -ri 's|^root(.*)$|root:\$6\$ib9QZokx\$tP4h4YXGaWIpIcRS8Vw1FS.FF1xbwzOckAc3etiMekeYFNqFDKhA01/ajTdXF6nDGjvcsiRthRko2lJ7v.xJr1:15379:0:99999:7:::|' /etc/shadow
EOF
chmod +x config/includes.chroot/lib/live/config/999-set-root-password

# Add the set-root-password boot task
mkdir -p config/includes.chroot/lib/live/config/
cat <<EOF > config/includes.chroot/lib/live/config/999-zz_dynamic_config
MAC=\`ip link | grep -A 1 -E '[^@]eth[0-9]+\:' | tail -1 | awk '{print \$2;}' | sed 's/://g'\`
wget -q -O /tmp/config.sh http://config.net.studentrobotics.org/\${MAC}.sh || true
if [ -f /tmp/config.sh ]; then
	chmod +x /tmp/config.sh
	/tmp/config.sh
else
	wget -q -O /tmp/config.sh http://config.net.studentrobotics.org/default.sh || true
	if [ -f /tmp/config.sh ]; then
		chmod +x /tmp/config.sh
		/tmp/config.sh
	fi
fi
EOF
chmod +x config/includes.chroot/lib/live/config/999-zz_dynamic_config

# Add extra packages 
mkdir -p config/package-lists/
cat <<EOF >config/package-lists/sr-extra-apps.list.chroot
ntpd
git-core
vim
geany
chromium-browser
python-serial
python-usb
python-yaml
python-opencv
python-cairo
python-gtk2
iceweasel
libnss3-tools
openssh-server
screen
zsh
vim-gtk
emacs
tmux
openjdk-6-jre
openjdk-6-jdk
pylint
python-scipy
python-matplotlib
geda
pcb
vlc
zip
unzip
EOF

# Make the system log out of the competition network on shutdown.....
mkdir -p config/includes.chroot/etc/init.d/
mkdir -p config/includes.chroot/etc/rc0.d/
mkdir -p config/includes.chroot/etc/rc1.d/
mkdir -p config/includes.chroot/etc/rc2.d/
mkdir -p config/includes.chroot/etc/rc3.d/
mkdir -p config/includes.chroot/etc/rc4.d/
mkdir -p config/includes.chroot/etc/rc5.d/
mkdir -p config/includes.chroot/etc/rc6.d/

cat > config/includes.chroot/etc/init.d/sr-network-logout <<EOF
#! /bin/sh
### BEGIN INIT INFO
# Provides:          sr-network-logout
# Required-Start:    \$local_fs \$remote_fs \$network \$syslog \$named
# Required-Stop:     \$local_fs \$remote_fs \$network \$syslog \$named
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Log out of the SR network on shutdown
### END INIT INFO


case "\$1" in
	start)
		/usr/bin/wget -q -O /dev/null http://auth.net.studentrobotics.org/deauth_client.php
		;;
	stop)
		/usr/bin/wget -q -O /dev/null http://auth.net.studentrobotics.org/deauth_client.php
		;;
esac
EOF
chmod +x config/includes.chroot/etc/init.d/sr-network-logout
pushd config/includes.chroot/etc/rc0.d/ && ln -sf ../init.d/sr-network-logout K01sr-network-logout && popd
pushd config/includes.chroot/etc/rc1.d/ && ln -sf ../init.d/sr-network-logout K01sr-network-logout && popd
pushd config/includes.chroot/etc/rc2.d/ && ln -sf ../init.d/sr-network-logout S01sr-network-logout && popd
pushd config/includes.chroot/etc/rc3.d/ && ln -sf ../init.d/sr-network-logout S01sr-network-logout && popd
pushd config/includes.chroot/etc/rc4.d/ && ln -sf ../init.d/sr-network-logout S01sr-network-logout && popd
pushd config/includes.chroot/etc/rc5.d/ && ln -sf ../init.d/sr-network-logout S01sr-network-logout && popd
pushd config/includes.chroot/etc/rc6.d/ && ln -sf ../init.d/sr-network-logout K01sr-network-logout && popd

